Index: MicroServices/portalService/src/main/java/com/portal/exceptions/DAOException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/exceptions/DAOException.java	(date 1485711871000)
+++ MicroServices/portalService/src/main/java/com/portal/exceptions/DAOException.java	(date 1485724811000)
@@ -22,7 +22,7 @@
     }
 
     /**
-     * exception with message and throwable for situation when something goes wrong on DAO
+     * Exception with message and throwable for situation when something goes wrong on DAO
      *
      * @param message   message for exception
      * @param throwable object for exception
Index: MicroServices/portalService/src/main/java/com/portal/exceptions/RoomNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/exceptions/RoomNotFoundException.java	(date 1485711871000)
+++ MicroServices/portalService/src/main/java/com/portal/exceptions/RoomNotFoundException.java	(date 1485724811000)
@@ -21,7 +21,7 @@
     }
 
     /**
-     * exception with message and throwable for situation when room wasn't found
+     * Exception with message and throwable for situation when room wasn't found
      *
      * @param message   message for exception
      * @param throwable object for exception
Index: MicroServices/portalService/src/main/java/com/portal/exceptions/UserNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/exceptions/UserNotFoundException.java	(date 1485711871000)
+++ MicroServices/portalService/src/main/java/com/portal/exceptions/UserNotFoundException.java	(date 1485724811000)
@@ -21,7 +21,7 @@
     }
 
     /**
-     * exception with message and throwable for situation when user wasn't found
+     * Exception with message and throwable for situation when user wasn't found
      *
      * @param message   message for exception
      * @param throwable object for exception
Index: MicroServices/portalService/src/main/java/com/portal/exceptions/GroupNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/exceptions/GroupNotFoundException.java	(date 1485711871000)
+++ MicroServices/portalService/src/main/java/com/portal/exceptions/GroupNotFoundException.java	(date 1485724811000)
@@ -22,7 +22,7 @@
     }
 
     /**
-     * exception with message and throwable for situation when group wasn't found
+     * Exception with message and throwable for situation when group wasn't found
      *
      * @param message   message for exception
      * @param throwable object for exception
Index: MicroServices/portalService/src/main/java/com/portal/exceptions/DTOtoEntityConvertException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/exceptions/DTOtoEntityConvertException.java	(date 1485724811000)
+++ MicroServices/portalService/src/main/java/com/portal/exceptions/DTOtoEntityConvertException.java	(date 1485724811000)
@@ -0,0 +1,35 @@
+package com.portal.exceptions;
+
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
+/**
+ * @author Artem Karnov @date 30.01.17.
+ *         artem.karnov@t-systems.com
+ */
+
+public class DTOtoEntityConvertException extends DAOException {
+
+    private static Logger logger = LogManager.getLogger(com.portal.exceptions.EntityToDTOConvertException.class);
+
+    /**
+     * Exception with message for situation when there is error in DTOtoEntityConverter
+     *
+     * @param message message for exception
+     */
+    public DTOtoEntityConvertException(String message) {
+        super(message);
+        logger.warn(message);
+    }
+
+    /**
+     * Exception with message and throwable for situation when there is error in DTOtoEntityConverter
+     *
+     * @param message   message for exception
+     * @param throwable object for exception
+     */
+    public DTOtoEntityConvertException(String message, Throwable throwable) {
+        super(message, throwable);
+        logger.warn(message, throwable);
+    }
+}
Index: MicroServices/portalService/src/main/java/com/portal/exceptions/EntityToDTOConvertException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/exceptions/EntityToDTOConvertException.java	(date 1485724811000)
+++ MicroServices/portalService/src/main/java/com/portal/exceptions/EntityToDTOConvertException.java	(date 1485724811000)
@@ -0,0 +1,34 @@
+package com.portal.exceptions;
+
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
+/**
+ * @author Artem Karnov @date 30.01.17.
+ *         artem.karnov@t-systems.com
+ */
+
+public class EntityToDTOConvertException extends DAOException {
+    private static Logger logger = LogManager.getLogger(EntityToDTOConvertException.class);
+
+    /**
+     * Exception with message for situation when there is error in EntityToDTOConverter
+     *
+     * @param message message for exception
+     */
+    public EntityToDTOConvertException(String message) {
+        super(message);
+        logger.warn(message);
+    }
+
+    /**
+     * Exception with message and throwable for situation when there is error in EntityToDTOConverter
+     *
+     * @param message   message for exception
+     * @param throwable object for exception
+     */
+    public EntityToDTOConvertException(String message, Throwable throwable) {
+        super(message, throwable);
+        logger.warn(message, throwable);
+    }
+}
Index: MicroServices/portalService/src/main/java/com/portal/exceptions/EntityAlreadyExistsException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/exceptions/EntityAlreadyExistsException.java	(date 1485711871000)
+++ MicroServices/portalService/src/main/java/com/portal/exceptions/EntityAlreadyExistsException.java	(date 1485724811000)
@@ -21,7 +21,7 @@
     }
 
     /**
-     * exception with message and throwable for situation when entity already exists
+     * Exception with message and throwable for situation when entity already exists
      *
      * @param message   message for exception
      * @param throwable object for exception
Index: MicroServices/portalService/src/main/java/com/portal/controllers/convertors/implementation/RoomDTOtoRoomEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/controllers/convertors/implementation/RoomDTOtoRoomEntity.java	(date 1485711871000)
+++ MicroServices/portalService/src/main/java/com/portal/controllers/convertors/implementation/RoomDTOtoRoomEntity.java	(date 1485724811000)
@@ -8,4 +8,10 @@
  **/
 @Component
 public class RoomDTOtoRoomEntity {
+    public void funk() {
+        int a = 0;
+        a++;
+        a += 500;
+        System.out.println(a);
+    }
 }
Index: MicroServices/portalService/src/main/java/com/portal/controllers/convertors/implementation/UserDTOtoUserEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- MicroServices/portalService/src/main/java/com/portal/controllers/convertors/implementation/UserDTOtoUserEntity.java	(date 1485711871000)
+++ MicroServices/portalService/src/main/java/com/portal/controllers/convertors/implementation/UserDTOtoUserEntity.java	(date 1485724811000)
@@ -1,8 +1,28 @@
 package com.portal.controllers.convertors.implementation;
 
+import com.portal.controllers.convertors.api.DTOtoEntityConverter;
+import com.portal.dto.UserDTO;
+import com.portal.entities.User;
+import com.portal.exceptions.UserNotFoundException;
+import com.portal.services.api.UserService;
+import org.springframework.beans.factory.annotation.Autowired;
+
 /**
  * @author Artem Karnov @date 25.01.2017.
  *         artem.karnov@t-systems.com
  **/
-public class UserDTOtoUserEntity {
+public class UserDTOtoUserEntity implements DTOtoEntityConverter<UserDTO, User> {
+    @Autowired
+    UserService userService;
+
+    @Override
+    public User convert(UserDTO dto) {
+        User user = null;
+        try {
+            user = userService.getUserByEMAil(dto.getEmail());
+        } catch (UserNotFoundException ex) {
+            throw new
+        }
+        return user;
+    }
 }
